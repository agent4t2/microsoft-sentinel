let excludedSRCIPs = dynamic([
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>",
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", 
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>",
    "<PRIVATE_IP>", "<PRIVATE_IP>", "<PRIVATE_IP>"
]);
Syslog
| where SyslogMessage contains "DenySSH:"
| where SyslogMessage !contains "IN=lo" and SyslogMessage !contains "puppet-agent"
| extend SRC_IP = extract("SRC=([\\d.]+)", 1, SyslogMessage)
| extend DST_IP = extract("DST=([\\d.]+)", 1, SyslogMessage)
| where not (SRC_IP in (excludedSRCIPs))
| summarize Count=count(), DST_Values=make_set(HostIP) by Source=SRC_IP
| project Source, Count, DST_Values
| where Count > 5
