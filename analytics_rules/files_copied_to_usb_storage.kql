let UsbDriveMount = DeviceEvents
    | where ActionType == "UsbDriveMounted"
    | extend ParsedFields=parse_json(AdditionalFields)
    | project
        DeviceId,
        DeviceName,
        DriveLetter=ParsedFields.DriveLetter,
        MountTime=TimeGenerated,
        ProductName=ParsedFields.ProductName,
        SerialNumber=ParsedFields.SerialNumber,
        Manufacturer=ParsedFields.Manufacturer
    | order by DeviceId asc, MountTime desc;
let FileCreation = DeviceFileEvents
    | where InitiatingProcessAccountName != "system"
    | where ActionType == "FileCreated"
    | where FolderPath !startswith "C:\\"
    | where FolderPath !startswith "\\"
    | project
        ReportId,
        DeviceId,
        InitiatingProcessAccountDomain,
        InitiatingProcessAccountName,
        InitiatingProcessAccountUpn,
        FileName,
        FolderPath,
        SHA256,
        TimeGenerated,
        SensitivityLabel,
        IsAzureInfoProtectionApplied
    | order by DeviceId asc, TimeGenerated desc;
FileCreation
| lookup kind=inner (UsbDriveMount) on DeviceId
| where FolderPath startswith DriveLetter
| where TimeGenerated >= MountTime
| partition hint.strategy=native by ReportId (top 1 by MountTime)
| order by DeviceId asc, TimeGenerated desc
| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)
| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), "")
| extend FileHashAlgorithm = 'SHA256'