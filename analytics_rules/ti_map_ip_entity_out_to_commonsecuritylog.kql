let IPRegex = '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}';
let dt_lookBack = 1h;
let ioc_lookBack = 14d;
let ignoredactivity = dynamic(["deny", "drop"]);
let TrustedCIDRs = (_GetWatchlist('trustedcidr') | project TrustedCIDR = SearchKey);
let TrustedCIDRArray = toscalar(TrustedCIDRs | summarize make_set(TrustedCIDR));
let IP_Indicators = ThreatIntelIndicators
    | extend IndicatorType = replace(@"\[|\]|\""", "", tostring(split(ObservableKey, ":", 0)))
    | where IndicatorType in ("ipv4-addr", "ipv6-addr", "network-traffic")
    | extend NetworkSourceIP = toupper(ObservableValue)
    | extend TrafficLightProtocolLevel = tostring(parse_json(AdditionalFields).TLPLevel)
    | where TimeGenerated >= ago(ioc_lookBack)
    | extend TI_ipEntity = iff(isnotempty(NetworkSourceIP), NetworkSourceIP, NetworkSourceIP)
    | where ipv4_is_private(TI_ipEntity) == false and  
            TI_ipEntity !startswith "fe80" and 
            TI_ipEntity !startswith "::" and 
            TI_ipEntity !startswith "127."
    | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id, ObservableValue
    | where IsActive and (ValidUntil > now() or isempty(ValidUntil))
    | extend IsTrustedIP = ipv4_is_in_any_range(NetworkSourceIP, TrustedCIDRArray)
    | where IsTrustedIP == false;
IP_Indicators
| join kind=innerunique (
    CommonSecurityLog
    | where TimeGenerated >= ago(dt_lookBack)
          and not(DeviceAction has_any (ignoredactivity))
    | where ApplicationProtocol != "icmp"
    | where DestinationIP <> "35.190.39.113"
    | extend MessageIP = extract(IPRegex, 0, Message)
    // Set CS_ipEntity as DestinationIP unless missing, then fall back to MessageIP
    | extend CS_ipEntity = iff(isnotempty(DestinationIP), DestinationIP, MessageIP)
    | where isnotempty(CS_ipEntity) and ipv4_is_private(CS_ipEntity) == false
    | extend CommonSecurityLog_TimeGenerated = TimeGenerated
) on $left.TI_ipEntity == $right.CS_ipEntity
| where CommonSecurityLog_TimeGenerated < ValidUntil
| summarize CommonSecurityLog_TimeGenerated = arg_max(CommonSecurityLog_TimeGenerated, *) by Id, CS_ipEntity
| project timestamp = CommonSecurityLog_TimeGenerated, SourceIP, DestinationIP, MessageIP, Message, DeviceVendor, DeviceProduct, Id, ValidUntil, Confidence, TI_ipEntity, CS_ipEntity, LogSeverity, DeviceAction, Type, ApplicationProtocol
