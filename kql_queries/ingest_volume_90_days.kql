// Get daily totals
let lookback = 90d;
let DailyData =
    Usage
    | where TimeGenerated between (startofday(ago(lookback)) .. endofday(ago(1d)))
    | where IsBillable == true
    | summarize DailyGB = sum(Quantity) / 1024 by bin(TimeGenerated, 1d);
// Flat 90-day average as a scalar
let FlatAvg = toscalar(DailyData | summarize avg(DailyGB));
// Build time series with rolling avg + anomaly flags
let SeriesData =
    DailyData
    | make-series DailyGB = avg(DailyGB) on TimeGenerated 
        from startofday(ago(lookback)) to endofday(ago(1d)) step 1d
    | extend RollingAvg = series_fir(DailyGB, repeat(1.0/7, 7))
    | mv-expand TimeGenerated to typeof(datetime), 
                DailyGB to typeof(real), 
                RollingAvg to typeof(real)
    | serialize
    | extend RowNumber = row_number()
    | where RowNumber > 6   // drop first 6 rows (partial averages)
    | extend FlatAvg = FlatAvg
    | extend AnomalyAbove = iif(DailyGB > RollingAvg * 1.2, DailyGB, real(null))
    | extend AnomalyBelow = iif(DailyGB < RollingAvg * 0.8, DailyGB, real(null))
    | extend IsAnomaly = iif(isnotnull(AnomalyAbove) or isnotnull(AnomalyBelow), true, false);
// Final dataset
SeriesData
| project TimeGenerated, DailyGB, RollingAvg, FlatAvg, AnomalyAbove, AnomalyBelow, IsAnomaly
| render timechart
