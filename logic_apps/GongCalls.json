{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/<PROVIDER>/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "<ip>",
        "triggers": {
            "Recurrence": {
                "type": "Recurrence",
                "recurrence": {
                    "frequency": "Hour",
                    "interval": 1,
                    "timeZone": "UTC",
                    "startTime": "2025-09-11T21:00:00Z"
                }
            }
        },
        "actions": {
            "Initialize_varFrom": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "varFrom",
                            "type": "String",
                            "value": "@{formatDateTime(addHours(utcNow(), -1), 'yyyy-MM-ddTHH:mm:ssZ')}"
                        }
                    ]
                },
                "runAfter": {
                    "Get_Gong_API_Secret": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_varTo": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "varTo",
                            "type": "String",
                            "value": "@{utcNow()}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_varFrom": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_varPage": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "varPage",
                            "type": "Integer",
                            "value": 1
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_varTo": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_varHasMore": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "varHasMore",
                            "type": "Boolean",
                            "value": true
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_varPage": [
                        "Succeeded"
                    ]
                }
            },
            "Until_Paging": {
                "type": "Until",
                "expression": "@equals(variables('varHasMore'), false)",
                "limit": {
                    "count": 120,
                    "timeout": "PT30M"
                },
                "actions": {
                    "HTTP_Call_Gong_API": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@concat('https://us-69641.api.gong.io/v2/calls?fromDateTime=',variables('varFrom'),'&toDateTime=',variables('varTo'),'&pageSize=',parameters('PageSize'),'&pageNumber=',variables('varPage'))",
                            "method": "GET",
                            "headers": {
                                "Accept": "application/json"
                            },
                            "authentication": {
                                "type": "Basic",
                                "username": "@{body('Get_Gong_API_Key')?['value']}",
                                "password": "@{body('Get_Gong_API_Secret')?['value']}"
                            }
                        }
                    },
                    "Condition_Status_200_or_404": {
                        "type": "If",
                        "expression": {
                            "or": [
                                {
                                    "equals": [
                                        "@outputs('HTTP_Call_Gong_API')?['statusCode']",
                                        200
                                    ]
                                },
                                {
                                    "equals": [
                                        "@outputs('HTTP_Call_Gong_API')?['statusCode']",
                                        404
                                    ]
                                }
                            ]
                        },
                        "actions": {
                            "Condition_200": {
                                "type": "If",
                                "expression": {
                                    "equals": [
                                        "@outputs('HTTP_Call_Gong_API')?['statusCode']",
                                        200
                                    ]
                                },
                                "actions": {
                                    "Parse_JSON": {
                                        "type": "ParseJson",
                                        "inputs": {
                                            "content": "@body('HTTP_Call_Gong_API')",
                                            "schema": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string"
                                                    },
                                                    "records": {
                                                        "type": "object",
                                                        "properties": {
                                                            "totalRecords": {
                                                                "type": "integer"
                                                            },
                                                            "currentPageSize": {
                                                                "type": "integer"
                                                            },
                                                            "currentPageNumber": {
                                                                "type": "integer"
                                                            },
                                                            "cursor": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "calls": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                },
                                                                "scheduled": {
                                                                    "type": "string"
                                                                },
                                                                "started": {
                                                                    "type": "string"
                                                                },
                                                                "duration": {
                                                                    "type": "integer"
                                                                },
                                                                "primaryUserId": {
                                                                    "type": "string"
                                                                },
                                                                "direction": {
                                                                    "type": "string"
                                                                },
                                                                "system": {
                                                                    "type": "string"
                                                                },
                                                                "scope": {
                                                                    "type": "string"
                                                                },
                                                                "media": {
                                                                    "type": "string"
                                                                },
                                                                "language": {
                                                                    "type": "string"
                                                                },
                                                                "workspaceId": {
                                                                    "type": "string"
                                                                },
                                                                "sdrDisposition": {},
                                                                "clientUniqueId": {
                                                                    "type": "string"
                                                                },
                                                                "customData": {},
                                                                "purpose": {},
                                                                "meetingUrl": {
                                                                    "type": "string"
                                                                },
                                                                "isPrivate": {
                                                                    "type": "boolean"
                                                                },
                                                                "calendarEventId": {}
                                                            },
                                                            "required": [
                                                                "id",
                                                                "url",
                                                                "title",
                                                                "scheduled",
                                                                "started",
                                                                "duration",
                                                                "primaryUserId",
                                                                "direction",
                                                                "system",
                                                                "scope",
                                                                "media",
                                                                "language",
                                                                "workspaceId",
                                                                "sdrDisposition",
                                                                "clientUniqueId",
                                                                "customData",
                                                                "purpose",
                                                                "meetingUrl",
                                                                "isPrivate",
                                                                "calendarEventId"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "Select_Flatten_Page": {
                                        "type": "Select",
                                        "inputs": {
                                            "from": "@coalesce(body('Parse_JSON')?['calls'], createArray())",
                                            "select": {
                                                "id": "@string(coalesce(item()?['id'], ''))",
                                                "url": "@string(coalesce(item()?['url'], ''))",
                                                "title": "@string(coalesce(item()?['title'], ''))",
                                                "scheduled": "@string(coalesce(item()?['scheduled'], ''))",
                                                "started": "@string(coalesce(item()?['scheduled'], ''))",
                                                "duration": "@string(coalesce(item()?['duration'], ''))",
                                                "primaryUserId": "@string(coalesce(item()?['primaryUserId'], ''))",
                                                "direction": "@string(coalesce(item()?['direction'], ''))",
                                                "system": "@string(coalesce(item()?['system'], ''))",
                                                "scope": "@string(coalesce(item()?['scope'], ''))",
                                                "media": "@string(coalesce(item()?['media'], ''))",
                                                "language": "@string(coalesce(item()?['language'], ''))",
                                                "workspaceId": "@string(coalesce(item()?['workspaceId'], ''))",
                                                "sdrDisposition": "@string(coalesce(item()?['sdrDisposition'], ''))",
                                                "clientUniqueId": "@string(coalesce(item()?['clientUniqueId'], ''))",
                                                "customData": "@string(coalesce(item()?['customData'], ''))",
                                                "purpose": "@string(coalesce(item()?['purpose'], ''))",
                                                "meetingUrl": "@string(coalesce(item()?['meetingUrl'], ''))",
                                                "isPrivate": "@string(coalesce(item()?['isPrivate'], ''))",
                                                "calendarEventId": "@string(coalesce(item()?['calendarEventId'], ''))"
                                            }
                                        },
                                        "runAfter": {
                                            "Parse_JSON": [
                                                "Succeeded"
                                            ]
                                        }
                                    },
                                    "For_each_Record": {
                                        "type": "Foreach",
                                        "foreach": "@body('Select_Flatten_Page')",
                                        "actions": {
                                            "Send_Data": {
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "body": "@item()",
                                                    "headers": {
                                                        "Log-Type": "GongCallsV2",
                                                        "time-generated-field": "started",
                                                        "Content-Type": "application/json"
                                                    },
                                                    "path": "/api/logs"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Select_Flatten_Page": [
                                                "Succeeded"
                                            ]
                                        }
                                    },
                                    "Set_varHasMore": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "varHasMore",
                                            "value": "@bool(if(less(length(coalesce(body('Parse_JSON')?['calls'], createArray())), parameters('PageSize')), false, true))"
                                        },
                                        "runAfter": {
                                            "For_each_Record": [
                                                "Succeeded"
                                            ]
                                        }
                                    },
                                    "Increment_Page": {
                                        "type": "IncrementVariable",
                                        "inputs": {
                                            "name": "varPage",
                                            "value": 1
                                        },
                                        "runAfter": {
                                            "Set_varHasMore": [
                                                "Succeeded"
                                            ]
                                        }
                                    }
                                },
                                "else": {
                                    "actions": {}
                                }
                            },
                            "Condition_404": {
                                "type": "If",
                                "expression": {
                                    "equals": [
                                        "@outputs('HTTP_Call_Gong_API')?['statusCode']",
                                        404
                                    ]
                                },
                                "actions": {
                                    "Set_varHasMore_to_false": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "varHasMore",
                                            "value": false
                                        }
                                    }
                                },
                                "else": {
                                    "actions": {}
                                }
                            }
                        },
                        "else": {
                            "actions": {}
                        },
                        "runAfter": {
                            "HTTP_Call_Gong_API": [
                                "Succeeded",
                                "Failed"
                            ]
                        }
                    }
                },
                "runAfter": {
                    "Initialize_varHasMore": [
                        "Succeeded"
                    ]
                }
            },
            "Get_Gong_API_Key": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('Gong-API-Key')}/value"
                },
                "runAfter": {},
                "runtimeConfiguration": {
                    "secureData": {
                        "properties": [
                            "inputs",
                            "outputs"
                        ]
                    }
                }
            },
            "Get_Gong_API_Secret": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('Gong-API-Secret')}/value"
                },
                "runAfter": {
                    "Get_Gong_API_Key": [
                        "SUCCEEDED"
                    ]
                },
                "runtimeConfiguration": {
                    "secureData": {
                        "properties": [
                            "inputs",
                            "outputs"
                        ]
                    }
                }
            }
        },
        "outputs": {},
        "parameters": {
            "PageSize": {
                "defaultValue": 500,
                "type": "Int"
            },
            "$connections": {
                "type": "Object",
                "defaultValue": {}
            }
        }
    },
    "parameters": {
        "$connections": {
            "type": "Object",
            "value": {
                "azureloganalyticsdatacollector": {
                    "id": "/subscriptions/<SUBSCRIPTION_ID>/providers/<PROVIDER>/locations/eastus/managedApis/azureloganalyticsdatacollector",
                    "connectionId": "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/<PROVIDER>/connections/azureloganalyticsdatacollector-4",
                    "connectionName": "azureloganalyticsdatacollector-4"
                },
                "keyvault": {
                    "id": "/subscriptions/<SUBSCRIPTION_ID>/providers/<PROVIDER>/locations/eastus/managedApis/keyvault",
                    "connectionId": "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/<PROVIDER>/connections/keyvault-4",
                    "connectionName": "keyvault-4",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    }
                }
            }
        }
    }
}